=== CLAUDE ENHANCED DEBUG SESSION ===
UPDATED CODE VERSION: 2025-09-13 NEW FORMAT
Task Type: data_extraction
Model: claude-3-5-sonnet-20241022
Temperature: 0.0
Max Tokens: 8192
Timestamp: 1758888472.9285278
Request Time: 2025-09-26 17:37:52
================================================================================
PROMPT SENT TO LLM:
--------------------------------------------------------------------------------
You are an expert data extraction specialist. Your task is to extract ALL structured data from the provided text using systematic chain-of-thought reasoning.

**CRITICAL MISSION**: Extract EVERY table row and EVERY data element. Missing data is unacceptable.

SCHEMA TO FOLLOW:
{
  "employee_profile_document": {
    "Document_Header": "object",
    "Employee_Profile": "object"
  },
  "Document_Header": {
    "Company_Name": "string",
    "Company_Code": "string",
    "Period_From": "object",
    "Period_To": "object",
    "Page_Number": "string"
  },
  "Employee_Profile": {
    "Basic_Information": "object",
    "Rate_Salary_Information": "object",
    "Tax_Information": "object",
    "Deduction_Information": "object",
    "AutoPay_Information": "object",
    "Direct_Deposit_Information": "object",
    "Labor_Allocation_Information": "object",
    "Fringe_Benefit_Information": "object",
    "Benefit_Accrual_Information": "object",
    "Detail_401k_Information": "object",
    "Review_Information": "object",
    "Emergency_Contact_Information": "object"
  },
  "Basic_Information": {
    "Employee_Name": "string",
    "Address": "object",
    "Employment_Details": "object",
    "Personal_Details": "object",
    "Contact_Information": "object",
    "Status_Indicators": "object"
  },
  "Address": {
    "Street_Address": "string",
    "City": "string",
    "State": "string",
    "Zip_Code": "string"
  },
  "Employment_Details": {
    "Employee_ID": "number",
    "Status": "string",
    "Employee_Type": "string",
    "Position": "string",
    "Title": "string",
    "Pay_Group": "string",
    "Job_Code": "string",
    "Hire_Date": "object",
    "Rehire_Date": "object",
    "Term_Date": "object",
    "Term_Reason": "string",
    "Tax_Form": "string",
    "WCC": "string",
    "Locations": "string",
    "Positions": "string"
  },
  "Personal_Details": {
    "SSN": "string",
    "DOB": "object",
    "Gender": "string",
    "Marital_Status": "string",
    "Visa_Type": "string",
    "Visa_Expiration": "object",
    "Citizen": "string",
    "I9_Verified": "string",
    "I9_Reverify": "string"
  },
  "Contact_Information": {
    "Home_Phone": "string",
    "Work_Phone": "string",
    "Extension": "string",
    "Email": "string",
    "Mail_Stop": "string"
  },
  "Status_Indicators": {
    "Statutory": "string",
    "Seasonal": "string",
    "Domestic_Emp": "string",
    "Probation": "number",
    "Union_Status": "string",
    "Union_Date": "object",
    "Collect_Dues": "string",
    "Paid_Init_Fees": "string",
    "Supervisor_ID": "string",
    "Supervisor_Name": "string",
    "Veteran": "string",
    "Disability": "string",
    "Smoker": "string",
    "Pension": "string",
    "Deceased": "string",
    "Def_Comp": "string",
    "Legal_Rep": "string"
  },
  "Rate_Salary_Information": {
    "AutoPay_Status": "string",
    "Pay_Frequency": "string",
    "OT_Exempt": "string",
    "Default_Hours": "number",
    "Rate_Records": "object"
  },
  "Rate_Record": [
    {
      "Rate_Code": "string",
      "Description": "string",
      "Rate": "number",
      "Salary": "number",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime"
    }
  ],
  "Tax_Information": {
    "Employee_Taxes": "object",
    "Employer_Taxes": "object"
  },
  "Employee_Tax_Record": [
    {
      "Tax_Code": "string",
      "Tax_Description": "string",
      "Filing_Status": "string",
      "Additional_Amount": "number",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime",
      "Default_Indicator": "string"
    }
  ],
  "Employer_Tax_Record": [
    {
      "Tax_Code": "string",
      "Tax_Description": "string",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime"
    }
  ],
  "Deduction_Information": {
    "Deduction_Records": "object"
  },
  "Deduction_Record": [
    {
      "Code": "string",
      "Description": "string",
      "Rate": "number",
      "Calc_Code": "string",
      "Frequency": "string",
      "Goal_Paid": "string",
      "Min_Max_Annual_Max": "string",
      "Arrears": "number",
      "Agency": "string",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime"
    }
  ],
  "AutoPay_Information": {
    "AutoPay_Records": "object"
  },
  "AutoPay_Record": [
    {
      "Status": "string"
    }
  ],
  "Direct_Deposit_Information": {
    "Direct_Deposit_Records": "object"
  },
  "Direct_Deposit_Record": [
    {
      "Sequence_Number": "number",
      "Transit_Number": "string",
      "Account_Number": "string",
      "Account_Type": "string",
      "Account_Name": "string",
      "Amount_Code": "string",
      "Amount": "number",
      "Prenote_Date": "datetime",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime",
      "Exclude_Indicator": "string",
      "Special_Indicator": "string"
    }
  ],
  "Labor_Allocation_Information": {
    "Labor_Allocation_Records": "object"
  },
  "Labor_Allocation_Record": [
    {
      "Status": "string"
    }
  ],
  "Fringe_Benefit_Information": {
    "Fringe_Benefit_Records": "object"
  },
  "Fringe_Benefit_Record": [
    {
      "Earnings_Code": "string",
      "Calc_Code": "string",
      "Rate_Code": "string",
      "Rate": "number",
      "Rate_Per": "string",
      "Amount": "number",
      "Tabled_Indicator": "string",
      "Units": "number",
      "Frequency": "string",
      "Goal_Paid_Goal_Balance": "string",
      "Min_Max_Annual_Max": "string",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime"
    }
  ],
  "Benefit_Accrual_Information": {
    "Benefit_Accrual_Records": "object"
  },
  "Benefit_Accrual_Record": [
    {
      "Benefit_Code": "string",
      "Rate": "number",
      "Amount": "number",
      "Hours": "number",
      "Max_Carryover_Max": "string",
      "Length_Of_Service": "string",
      "Hours_Used_Avail_Total_Prob": "string",
      "Dollars_Used_Avail_Total_Prob": "string",
      "Effective_Start_Date": "datetime",
      "Effective_End_Date": "datetime"
    }
  ],
  "Detail_401k_Information": {
    "Detail_401k_Records": "object"
  },
  "Detail_401k_Record": [
    {
      "Status": "string"
    }
  ],
  "Review_Information": {
    "Review_Records": "object"
  },
  "Review_Record": [
    {
      "Status": "string"
    }
  ],
  "Emergency_Contact_Information": {
    "Emergency_Contact_Records": "object"
  },
  "Emergency_Contact_Record": [
    {
      "Status": "string"
    }
  ]
}

RAW TEXT TO ANALYZE:
Employee Profile
    Velorynt Labs
Company (37546)
Period:
12/17/2024 to 12/26/2024
Page
65
RateCode
Description
Rate
Salary
Effective
Dates
Caroline Jones
Stream Apt. 219 
Emp Id
 4632
 Status
A
 Emp Type
 Home #
509-121-3247
Riverton, UT           
SSN
088-39-6286
 Position
 Statutory
0.00
 Work #
47589
 DOB
12/26/2001(22)
 Title
 Seasonal
0.00
 Ext.
 Gender
M
 Pay Group
 Domestic Emp
No
 Email
 Marital Status
S
 Job Code
 Probation
0.00
 Mail Stop
 Hire Date
04/19/2023
 Visa Type
 Tax Form
W2
 Union
 Nickname
 Rehire Date
 Exp
 WCC
8810
 Union Date
 surname
 Term Date
 Citizen
 EEOC
 Collect Dues
No
 Prior Last
 Term Reason
 I9 Verified
No
 Supervisor ID
 Paid Init. Fees
No
 Disability
 Adj Sen Date
 I9 Reverify
 Name
 Veteran
 Smoker
No
 Pension
No
 Deceased
No
 Def Comp
No
 Legal Rep
No
Rate/Salary Information
 AutoPay
Locations
605
 Pay Frequency
B
Positions
700
 OT Exempt
No
 Default Hours
0.00
Base
Base Rate
19.00
04/19/2024 to 12/31/2100
Base
Base Rate
18.00
04/28/2023 to 04/18/2024
Tax Information
Employee Tax
Status
Add'l Amount 
Effective Dates
Default
MED
Medicare
0.00
04/28/2023 to 12/31/2100
Yes
SS
OASDI
0.00
04/28/2023 to 12/31/2100
Yes
FITW
Federal Income Tax
S-0
0.00
04/28/2023 to 12/31/2100
Yes
MN
Minnesota SITW
S-1
0.00
04/28/2023 to 12/31/2100
Yes
EmployerTax
Effective
Dates
Default
MED-R
Medicare - Employer 04/28/2023 to 12/31/2100
SS-R
OASDI - Employer
04/28/2023 to 12/31/2100
FUTA
Fed Unemployment
04/28/2023 to 12/31/2100
MNAST Minnesota Federal Loan Assessment
04/28/2023 to 12/31/2100
MNDW Workforce Enhancement Fee
04/28/2023 to 12/31/2100
MNSUI Minnesota SUI
04/28/2023 to 12/31/2100
Deduction Information
Code
Deduction
Rate
CalcCode
Frequency
Goal/Paid
Min/Max/Annual Max
Arrears
Agency
Effective
Dates
401KC
401K Contribution100.00
0.00/0.00
0.00/0.00/0.00
0.00
07/01/2023 to 12/31/2100
AutoPay Information
No AutoPay Information
Direct Deposit Information
Sequence No. Transit No. Account No.
Checking? Account Name
Amount Code
Amount Prenote Date
Effective
Dates
Exclude Special
99.00
296075933 2294694696    
Yes
Caroline  
%
100.00 04/28/2023
04/01/2023 to 12/31/2100 No
Labor Allocation Information
No Labor Allocation Information
Fringe Benefit Information
ECode
CalcCode Rate Code
Rate
Rate Per
Amount Tabled?  Units
Frequency Goal/Paid/Goal Bal.
Min/Max/Ann. Max
Effective
Dates
STD
0.00
9.50 No
0.00
ML
0.00/0.00/0.00
0.00/0.00/0.00
08/30/2024 to 12/31/2100
Benefit Accrual Information
BCode
Rate
Amount Hours
Max/Carryover Max Length of Service
Hours: Used/Avail/Total/Prob
Dollars: Used/Avail/Total/Prob
Effective
Dates
ESST
0.00
0.00 0.00
0.00/0.00
0.00/14.11/0.00/0.00
0.00/257.31/0.00/0.00
01/01/2024 to 06/01/2024
PTO1
0.00
0.00 0.00
0.00/0.00
23.00/39.36/0.00/0.00
437.00/747.84/0.00/0.00
06/02/2024 to 12/31/2100
PTO2
0.00
0.00 0.00
0.00/0.00
0.00/38.31/0.00/0.00
0.00/689.58/0.00/0.00
04/19/2023 to 09/09/2023
401k Detail Information
No 401k Detail Information
Review Information
No Review Information
Emergency Contact Information
CBIZ HCM
Phone: (800) 815-3023  Fax: (877) 282-3016
Run Date:
Run Time:
12/26/24
11:06 AM
Locations
Positions
Profile © 1995-2024 MPAY
Employee
Jone


## CHAIN OF THOUGHT EXTRACTION PROCESS:

**STEP 1: DOCUMENT STRUCTURE ANALYSIS**
Before extracting, analyze and explain:
- What type of document is this? (employee profile, tax document, benefit summary, etc.)
- What are the main sections? (personal info, tables, lists, etc.)
- How many tables/arrays do I see in the text?
- Where are the table headers and how can I identify table boundaries?

**STEP 2: SYSTEMATIC TABLE IDENTIFICATION**
For each array/list in the schema, think step by step:
- What table does this array represent?
- Where does this table start in the raw text?
- What are the column headers for this table?
- Where does this table end?
- How many rows can I count?

**STEP 3: COMPLETE TABLE SCANNING METHODOLOGY**
For EACH table/array field, use this process:

**3A: BOUNDARY DETECTION**
- Identify table start: Look for headers, section titles, or repeated patterns
- Identify table end: Look for next section, blank lines, or different content type
- Mark the entire table region for systematic scanning

**3B: ROW-BY-ROW SYSTEMATIC EXTRACTION**
- Start from first data row after headers
- Extract each row completely, maintaining column alignment
- Continue row by row until table boundary
- Count total rows as you go: "Row 1: [data], Row 2: [data], Row 3: [data]..."
- Verify against raw text: "I see X rows in the table"

**3C: COMPLETENESS VERIFICATION**
- Did I reach the end of the table?
- Are there any rows I might have missed?
- Do the row counts match what I can see in the text?
- Let me re-scan one more time to ensure completeness

## ENHANCED EXTRACTION INSTRUCTIONS:
1. Extract data exactly as specified in the schema structure
2. Use the exact field names and structure from the schema
3. Find values corresponding to each field/column specified in the schema
4. **BLANK FIELD HANDLING:** If a field exists in the schema but appears blank/empty in the document (not missing), extract it as empty string "" - DO NOT use null
5. **COMPLETE TEXT EXTRACTION:** Always use the complete, untruncated text from the raw text - if you see partial text, find the complete version in the raw text
6. Maintain proper data types as indicated in the schema
7. IMPORTANT: Return ONLY the essential data values, no metadata, descriptions, or additional details
8. Keep the response concise and focused only on the actual data values

**CRITICAL BLANK FIELD RULES:**
9. **BLANK vs NULL:** If a field label exists but has no value (blank), use empty string "". Only use null if the field is completely absent from the document
10. **EMPTY FIELDS MATTER:** Fields like "Position:", "Emp Type:", "Title:" may be blank in documents but should be extracted as "" not omitted
11. **VISUAL BLANKS:** If you see a field label followed by blank space, extract as empty string ""

**CRITICAL TEXT COMPLETENESS RULES:**
12. **PARTIAL TEXT MATCHING:** If you encounter truncated/partial text, search the raw text for the complete version
13. **TRUNCATION EXAMPLES:** "Workforce Enhanc..." should become "Workforce Enhancement Fee" by finding complete text in raw
14. **ABBREVIATION EXPANSION:** Use the most complete form available in the raw text
15. **TEXT PRIORITY:** Raw text completeness takes priority over partial visual representations

## SELF-EXPLANATORY TABLE EXTRACTION WITH REASONING:

**STEP 4: EXPLAIN YOUR TABLE DETECTION PROCESS**
For each table/array in schema, provide reasoning:
- "I found the [table_name] table starting at [location_in_text]"
- "The table headers are: [list headers]"
- "I can see [X] rows of data below the headers"
- "The table appears to end at [location] before [next_section]"

**STEP 5: DEMONSTRATE ROW EXTRACTION WITH EXAMPLES**
As you extract each table, explain your process:
- "Row 1 contains: [show how you parse the first row]"
- "Row 2 contains: [show second row parsing]"
- "I continue this pattern and find [total_count] rows"
- "Let me verify by re-scanning: [confirm count]"

**MANDATORY TABLE EXTRACTION METHODOLOGY:**

16. **SYSTEMATIC TABLE SCANNING**: For each array field in schema:
    a) Locate the corresponding table in raw text
    b) Identify exact start and end boundaries
    c) Count total rows before starting extraction
    d) Extract row by row with verification

17. **COMPLETE ROW EXTRACTION**: Use this thinking process:
    - "I'm looking for [field_name] array data"
    - "I found a table with headers: [headers]"
    - "Scanning row by row: Row 1=[data], Row 2=[data]..."
    - "Total rows found: [count]. Extracting all of them."

18. **BOUNDARY VERIFICATION**: Explicitly check:
    - "Table starts after: [previous_content]"
    - "Table ends before: [next_content]"
    - "No additional rows found beyond this boundary"

19. **COMPLETENESS CONFIRMATION**: Always verify:
    - "I've extracted [X] rows from [table_name] table"
    - "Re-scanning to confirm no missed rows..."
    - "Confirmed: All [X] rows have been captured"

20. **ZERO TOLERANCE FOR MISSING DATA**: If unsure, always include:
    - "This row might be incomplete, but I'll include it to avoid missing data"
    - "Better to extract questionable data than miss valid information"

CRITICAL JSON REQUIREMENTS:
- Return ONLY valid JSON, no additional text or explanations
- Use double quotes for all strings
- Escape special characters properly: \" for quotes, \\ for backslashes, \n for newlines
- No trailing commas anywhere
- No comments in JSON
- Ensure all brackets and braces are properly closed
- If a string value contains quotes, escape them with backslash
- Keep values concise - extract only the essential information without verbose descriptions

## WORKING EXAMPLE WITH CHAIN OF THOUGHT:

**REASONING EXAMPLE**: If I see in the raw text:
```
Employee: John Smith
Department: IT

Tax Information:
TAX_CODE    DESCRIPTION              RATE
MED-R       Medicare - Employer      1.45%
FICA        Social Security          6.2%
MNDW        Minnesota Workforce      0.25%
```

**MY CHAIN OF THOUGHT PROCESS**:
1. "I found employee info: John Smith in IT department"
2. "I found a tax table starting after 'Tax Information:'"
3. "Table headers are: TAX_CODE, DESCRIPTION, RATE"
4. "Scanning rows: Row 1=MED-R|Medicare - Employer|1.45%, Row 2=FICA|Social Security|6.2%, Row 3=MNDW|Minnesota Workforce|0.25%"
5. "Total rows found: 3. Extracting all of them."
6. "Confirmed: All 3 tax rows captured"

**RESULTING JSON**:
{
  "Employee_Name": "John Smith",
  "Department": "IT",
  "tax_information": [
    {
      "tax_code": "MED-R",
      "description": "Medicare - Employer",
      "rate": "1.45%"
    },
    {
      "tax_code": "FICA",
      "description": "Social Security",
      "rate": "6.2%"
    },
    {
      "tax_code": "MNDW",
      "description": "Minnesota Workforce",
      "rate": "0.25%"
    }
  ]
}

## FINAL EXECUTION INSTRUCTIONS:

**NOW EXTRACT THE DATA USING THIS SYSTEMATIC APPROACH:**

1. **FIRST**: Analyze the document structure (Step 1)
2. **SECOND**: Identify all tables/arrays in the text (Step 2)
3. **THIRD**: Use the complete table scanning methodology for each array (Step 3)
4. **FOURTH**: Apply self-explanatory reasoning as you extract (Steps 4-5)
5. **FIFTH**: Verify completeness using the mandatory methodology (Steps 16-20)

**CRITICAL SUCCESS CRITERIA:**
- Every table row must be extracted
- Every array field in schema must be populated with ALL available data
- If a table has 5 rows, extract ALL 5 rows
- If you find any table/array data in the text, it must appear in your JSON
- Missing entire tables or incomplete row extraction is UNACCEPTABLE

**OUTPUT FORMAT:**
Return valid JSON that matches the exact structure of the provided schema with ALL data values extracted.

**EXECUTE THE EXTRACTION NOW - RETURN ONLY THE JSON:**
================================================================================
RAW RESPONSE FROM LLM:
--------------------------------------------------------------------------------
Let me systematically extract the data following the schema structure:

{
  "employee_profile_document": {
    "Document_Header": {
      "Company_Name": "Velorynt Labs",
      "Company_Code": "37546",
      "Period_From": "12/17/2024",
      "Period_To": "12/26/2024",
      "Page_Number": "65"
    },
    "Employee_Profile": {
      "Basic_Information": {
        "Employee_Name": "Caroline Jones",
        "Address": {
          "Street_Address": "Stream Apt. 219",
          "City": "Riverton",
          "State": "UT",
          "Zip_Code": ""
        },
        "Employment_Details": {
          "Employee_ID": 4632,
          "Status": "A",
          "Employee_Type": "",
          "Position": "",
          "Title": "",
          "Pay_Group": "",
          "Job_Code": "",
          "Hire_Date": "04/19/2023",
          "Rehire_Date": "",
          "Term_Date": "",
          "Term_Reason": "",
          "Tax_Form": "W2",
          "WCC": "8810",
          "Locations": "605",
          "Positions": "700"
        },
        "Personal_Details": {
          "SSN": "088-39-6286",
          "DOB": "12/26/2001",
          "Gender": "M",
          "Marital_Status": "S",
          "Visa_Type": "",
          "Visa_Expiration": "",
          "Citizen": "",
          "I9_Verified": "No",
          "I9_Reverify": ""
        },
        "Contact_Information": {
          "Home_Phone": "509-121-3247",
          "Work_Phone": "47589",
          "Extension": "",
          "Email": "",
          "Mail_Stop": ""
        },
        "Status_Indicators": {
          "Statutory": "0.00",
          "Seasonal": "0.00",
          "Domestic_Emp": "No",
          "Probation": 0.00,
          "Union_Status": "",
          "Union_Date": "",
          "Collect_Dues": "No",
          "Paid_Init_Fees": "No",
          "Supervisor_ID": "",
          "Supervisor_Name": "",
          "Veteran": "",
          "Disability": "",
          "Smoker": "No",
          "Pension": "No",
          "Deceased": "No",
          "Def_Comp": "No",
          "Legal_Rep": "No"
        }
      },
      "Rate_Salary_Information": {
        "AutoPay_Status": "",
        "Pay_Frequency": "B",
        "OT_Exempt": "No",
        "Default_Hours": 0.00,
        "Rate_Records": [
          {
            "Rate_Code": "Base",
            "Description": "Base Rate",
            "Rate": 19.00,
            "Salary": null,
            "Effective_Start_Date": "04/19/2024",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Rate_Code": "Base",
            "Description": "Base Rate",
            "Rate": 18.00,
            "Salary": null,
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "04/18/2024"
          }
        ]
      },
      "Tax_Information": {
        "Employee_Taxes": [
          {
            "Tax_Code": "MED",
            "Tax_Description": "Medicare",
            "Filing_Status": "",
            "Additional_Amount": 0.00,
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100",
            "Default_Indicator": "Yes"
          },
          {
            "Tax_Code": "SS",
            "Tax_Description": "OASDI",
            "Filing_Status": "",
            "Additional_Amount": 0.00,
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100",
            "Default_Indicator": "Yes"
          },
          {
            "Tax_Code": "FITW",
            "Tax_Description": "Federal Income Tax",
            "Filing_Status": "S-0",
            "Additional_Amount": 0.00,
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100",
            "Default_Indicator": "Yes"
          },
          {
            "Tax_Code": "MN",
            "Tax_Description": "Minnesota SITW",
            "Filing_Status": "S-1",
            "Additional_Amount": 0.00,
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100",
            "Default_Indicator": "Yes"
          }
        ],
        "Employer_Taxes": [
          {
            "Tax_Code": "MED-R",
            "Tax_Description": "Medicare - Employer",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Tax_Code": "SS-R",
            "Tax_Description": "OASDI - Employer",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Tax_Code": "FUTA",
            "Tax_Description": "Fed Unemployment",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Tax_Code": "MNAST",
            "Tax_Description": "Minnesota Federal Loan Assessment",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Tax_Code": "MNDW",
            "Tax_Description": "Workforce Enhancement Fee",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Tax_Code": "MNSUI",
            "Tax_Description": "Minnesota SUI",
            "Effective_Start_Date": "04/28/2023",
            "Effective_End_Date": "12/31/2100"
          }
        ]
      },
      "Deduction_Information": {
        "Deduction_Records": [
          {
            "Code": "401KC",
            "Description": "401K Contribution",
            "Rate": 100.00,
            "Calc_Code": "",
            "Frequency": "",
            "Goal_Paid": "0.00/0.00",
            "Min_Max_Annual_Max": "0.00/0.00/0.00",
            "Arrears": 0.00,
            "Agency": "",
            "Effective_Start_Date": "07/01/2023",
            "Effective_End_Date": "12/31/2100"
          }
        ]
      },
      "Direct_Deposit_Information": {
        "Direct_Deposit_Records": [
          {
            "Sequence_Number": 99.00,
            "Transit_Number": "296075933",
            "Account_Number": "2294694696",
            "Account_Type": "Checking",
            "Account_Name": "Caroline",
            "Amount_Code": "%",
            "Amount": 100.00,
            "Prenote_Date": "04/28/2023",
            "Effective_Start_Date": "04/01/2023",
            "Effective_End_Date": "12/31/2100",
            "Exclude_Indicator": "No",
            "Special_Indicator": ""
          }
        ]
      },
      "Fringe_Benefit_Information": {
        "Fringe_Benefit_Records": [
          {
            "Earnings_Code": "STD",
            "Calc_Code": "",
            "Rate_Code": "",
            "Rate": 0.00,
            "Rate_Per": "",
            "Amount": 9.50,
            "Tabled_Indicator": "No",
            "Units": 0.00,
            "Frequency": "ML",
            "Goal_Paid_Goal_Balance": "0.00/0.00/0.00",
            "Min_Max_Annual_Max": "0.00/0.00/0.00",
            "Effective_Start_Date": "08/30/2024",
            "Effective_End_Date": "12/31/2100"
          }
        ]
      },
      "Benefit_Accrual_Information": {
        "Benefit_Accrual_Records": [
          {
            "Benefit_Code": "ESST",
            "Rate": 0.00,
            "Amount": 0.00,
            "Hours": 0.00,
            "Max_Carryover_Max": "0.00/0.00",
            "Length_Of_Service": "",
            "Hours_Used_Avail_Total_Prob": "0.00/14.11/0.00/0.00",
            "Dollars_Used_Avail_Total_Prob": "0.00/257.31/0.00/0.00",
            "Effective_Start_Date": "01/01/2024",
            "Effective_End_Date": "06/01/2024"
          },
          {
            "Benefit_Code": "PTO1",
            "Rate": 0.00,
            "Amount": 0.00,
            "Hours": 0.00,
            "Max_Carryover_Max": "0.00/0.00",
            "Length_Of_Service": "",
            "Hours_Used_Avail_Total_Prob": "23.00/39.36/0.00/0.00",
            "Dollars_Used_Avail_Total_Prob": "437.00/747.84/0.00/0.00",
            "Effective_Start_Date": "06/02/2024",
            "Effective_End_Date": "12/31/2100"
          },
          {
            "Benefit_Code": "PTO2",
            "Rate": 0.00,
            "Amount": 0.00,
            "Hours": 0.00,
            "Max_Carryover_Max": "0.00/0.00",
            "Length_Of_Service": "",
            "Hours_Used_Avail_Total_Prob": "0.00/38.31/0.00/0.00",
            "Dollars_Used_Avail_Total_Prob": "0.00/689.58/0.00/0.00",
            "Effective_Start_Date": "04/19/2023",
            "Effective_End_Date": "09/09/2023"
          }
        ]
      },
      "AutoPay_Information": {
        "AutoPay_Records": [
          {
            "Status": "No AutoPay Information"
          }
        ]
      },
      "Labor_Allocation_Information": {
        "Labor_Allocation_Records": [
          {
            "Status": "No Labor Allocation Information"
          }
        ]
      },
      "Detail_401k_Information": {
        "Detail_401k_Records": [
          {
            "Status": "No 401k Detail Information"
          }
        ]
      },
      "Review_Information": {
        "Review_Records": [
          {
            "Status": "No Review Information"
          }
        ]
      },
      "Emergency_Contact_Information": {
        "Emergency_Contact_Records": [
          {
            "Status": ""
          }
        ]
      }
    }
  }
}
================================================================================
